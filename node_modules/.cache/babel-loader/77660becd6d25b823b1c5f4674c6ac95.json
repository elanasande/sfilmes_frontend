{"ast":null,"code":"export const API_URL = 'https://sfilmes-backend.herokuapp.com';\nexport function TOKEN_POST(email, password) {\n  return {\n    url: API_URL + '/auth',\n    options: {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: email,\n        password: password\n      })\n    }\n  };\n}\nexport function USER_GET(id) {\n  return {\n    url: API_URL + '/usuario' + id,\n    options: {\n      method: 'GET',\n      headers: {}\n    }\n  };\n}\nexport function REGISTER(body) {\n  return {\n    url: API_URL + '/usuario',\n    options: {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    }\n  };\n}\nexport function REGISTER_USER(body) {\n  return {\n    url: API_URL + '/usuario',\n    options: {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    }\n  };\n}\nexport function USER_DELETE(id) {\n  return {\n    url: `${API_URL}/usuario/${id}`,\n    options: {\n      method: 'DELETE',\n      headers: {\n        Authorization: 'Bearer ' + window.localStorage.getItem('token')\n      }\n    }\n  };\n}\nexport function USER_UPDATE(id, name, job) {\n  return {\n    url: `${API_URL}/usuario/${id}`,\n    options: {\n      method: 'put',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: name,\n        job: job\n      })\n    }\n  };\n}\nexport function REGISTER_MOVIE(name, duracao) {\n  return {\n    url: API_URL + '/filme',\n    options: {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: name,\n        duracao: duracao\n      })\n    }\n  };\n}","map":{"version":3,"sources":["/home/exacta/Documentos/BancoDados/sfront/sfilmes_frontend/src/api.js"],"names":["API_URL","TOKEN_POST","email","password","url","options","method","headers","body","JSON","stringify","USER_GET","id","REGISTER","REGISTER_USER","USER_DELETE","Authorization","window","localStorage","getItem","USER_UPDATE","name","job","REGISTER_MOVIE","duracao"],"mappings":"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","sourcesContent":["export const API_URL = 'https://sfilmes-backend.herokuapp.com';\n\nexport function TOKEN_POST(email, password) {\n  return {\n    url: API_URL + '/auth',\n    options: {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        email: email,\n        password: password,\n      }),\n    },\n  };\n}\n\nexport function USER_GET(id) {\n  return {\n    url: API_URL + '/usuario' + id,\n    options: {\n      method: 'GET',\n      headers: {},\n    },\n  };\n}\n\nexport function REGISTER(body) {\n  return {\n    url: API_URL + '/usuario',\n    options: {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(body),\n    },\n  };\n}\n\nexport function REGISTER_USER(body) {\n  return {\n    url: API_URL + '/usuario',\n    options: {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(body),\n    },\n  };\n}\n\nexport function USER_DELETE(id) {\n  return {\n    url: `${API_URL}/usuario/${id}`,\n    options: {\n      method: 'DELETE',\n      headers: {\n        Authorization: 'Bearer ' + window.localStorage.getItem('token'),\n      },\n    },\n  };\n}\n\nexport function USER_UPDATE(id, name, job) {\n  return {\n    url: `${API_URL}/usuario/${id}`,\n    options: {\n      method: 'put',\n      headers: { 'Content-type': 'application/json' },\n      body: JSON.stringify({\n        name: name,\n        job: job,\n      }),\n    },\n  };\n}\n\nexport function REGISTER_MOVIE(name, duracao) {\n  return {\n    url: API_URL + '/filme',\n    options: {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        name: name,\n        duracao: duracao,\n      }),\n    },\n  };\n}"]},"metadata":{},"sourceType":"module"}