{"ast":null,"code":"import React from 'react';\n\nconst useFetch = () => {\n  const [data, setData] = React.useState(null);\n  const [error, setError] = React.useState(null);\n  const [loading, setLoading] = React.useState(false);\n  const request = React.useCallback(async (url, options) => {\n    let response;\n    let json;\n\n    try {\n      setError(null);\n      setLoading(true);\n      response = await fetch(url, options);\n      if (!response.ok) throw new Error(`Error: ${response.statusText}`);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setData(json);\n      setLoading(false);\n      return {\n        response,\n        json\n      };\n    }\n  }, []);\n  return {\n    data,\n    loading,\n    error,\n    request\n  };\n};\n\nexport default useFetch;","map":{"version":3,"sources":["/home/exacta/Documentos/BancoDados/sfront/sfilmes_frontend/src/Hooks/useFetch.js"],"names":["React","useFetch","data","setData","useState","error","setError","loading","setLoading","request","useCallback","url","options","response","json","fetch","ok","Error","statusText","err","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,KAAK,CAACI,QAAN,CAAe,IAAf,CAAxB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,KAAK,CAACI,QAAN,CAAe,IAAf,CAA1B;AACA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBR,KAAK,CAACI,QAAN,CAAe,KAAf,CAA9B;AAEA,QAAMK,OAAO,GAAGT,KAAK,CAACU,WAAN,CAAkB,OAAOC,GAAP,EAAYC,OAAZ,KAAwB;AACxD,QAAIC,QAAJ;AACA,QAAIC,IAAJ;;AACA,QAAI;AACFR,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACAE,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAK,MAAAA,QAAQ,GAAG,MAAME,KAAK,CAACJ,GAAD,EAAMC,OAAN,CAAtB;AACA,UAAI,CAACC,QAAQ,CAACG,EAAd,EAAkB,MAAM,IAAIC,KAAJ,CAAW,UAASJ,QAAQ,CAACK,UAAW,EAAxC,CAAN;AACnB,KALD,CAKE,OAAOC,GAAP,EAAY;AACZb,MAAAA,QAAQ,CAACa,GAAG,CAACC,OAAL,CAAR;AACD,KAPD,SAOU;AACRjB,MAAAA,OAAO,CAACW,IAAD,CAAP;AACAN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA,aAAO;AAAEK,QAAAA,QAAF;AAAYC,QAAAA;AAAZ,OAAP;AACD;AACF,GAfe,EAeb,EAfa,CAAhB;AAiBA,SAAO;AACLZ,IAAAA,IADK;AAELK,IAAAA,OAFK;AAGLF,IAAAA,KAHK;AAILI,IAAAA;AAJK,GAAP;AAMD,CA5BD;;AA8BA,eAAeR,QAAf","sourcesContent":["import React from 'react';\n\nconst useFetch = () => {\n  const [data, setData] = React.useState(null);\n  const [error, setError] = React.useState(null);\n  const [loading, setLoading] = React.useState(false);\n\n  const request = React.useCallback(async (url, options) => {\n    let response;\n    let json;\n    try {\n      setError(null);\n      setLoading(true);\n      response = await fetch(url, options);\n      if (!response.ok) throw new Error(`Error: ${response.statusText}`);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setData(json);\n      setLoading(false);\n      return { response, json };\n    }\n  }, []);\n\n  return {\n    data,\n    loading,\n    error,\n    request,\n  };\n};\n\nexport default useFetch;\n"]},"metadata":{},"sourceType":"module"}